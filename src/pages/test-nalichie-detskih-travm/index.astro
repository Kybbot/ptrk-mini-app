---
import { quizIds } from "@/assets/constants/quizIds";
import { getLangFromUrl, useTranslations } from "@/assets/i18n/utils";
import { answerAndPoints, questions, sectionsArray } from "@/assets/constants/quiz2";

import MainLayout from "@/layouts/MainLayout.astro";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const toOffset = (sectionIndex: number) => {
	const res = questions.slice(0, sectionIndex).reduce((a: number, b: any) => a + b.length, 0);
	return res;
};
---

<MainLayout
	title={t("meta.title-quiz2")}
	description={t("meta.description-quiz2")}
	showMobileMenu={false}
	hideFooter={true}
	quizContainer={true}
	alternate="/test-nalichie-detskih-travm"
>
	<section class="quiz">
		<div class="quiz__header">
			<h1 id={quizIds[2]} data-quizLink="test-nalichie-detskih-travm" class="quiz__titel">
				{t("quiz2.title")}
			</h1>
		</div>
		<form class="quiz__wrapper" id="quizForm">
			<div class="quiz__container">
				<div class="quiz__timeLine">
					<div class="quiz__progress">
						{Array.from({ length: questions[0].length }).map(() => <div class="quiz__bar" />)}
					</div>
					<p class="quiz__numbers">
						<span id="answered">1/{questions[0].length}</span>
					</p>
				</div>

				{
					sectionsArray.map((item: number, sectionIndex: number) => (
						<div id={`content${item + 1}`} class="quiz__questions">
							{questions[item]?.map((question, index: number) => (
								<fieldset class="quiz__fieldset quiz__fieldset--grid">
									<legend class="quiz__legend">
										<p>{question[lang]}</p>
									</legend>
									<div class="quiz__selects">
										<label for={`child-${index}`} class="label">
											<span class="label__title">{t("quiz.label1")}</span>
											<div class="customSelect">
												<select name={`child-${index}`} id={`child-${index}`} class="select">
													<option class="select__option" value="0" selected disabled>
														{t("quiz.option")}
													</option>
													{answerAndPoints[
														index + (sectionIndex === 0 ? 0 : toOffset(sectionIndex)) - toOffset(sectionIndex)
													].points.map((point) => (
														<option class="select__option" value={point.points}>
															{point.text[lang]}
														</option>
													))}
												</select>
												<div class="customSelect__icon">
													<svg
														width="24"
														height="24"
														fill="none"
														aria-hidden="true"
														viewBox="0 0 24 24"
														xmlns="http://www.w3.org/2000/svg"
													>
														<g opacity="0.3">
															<path
																d="M7 10L12 15L17 10"
																stroke="black"
																stroke-width="1.5"
																stroke-linecap="round"
																stroke-linejoin="round"
															/>
														</g>
													</svg>
												</div>
											</div>
										</label>
										<label for={`now-${index}`} class="label">
											<span class="label__title">{t("quiz.label2")}</span>
											<div class="customSelect">
												<select name={`now-${index}`} id={`now-${index}`} class="select">
													<option class="select__option" value="0" selected disabled>
														{t("quiz.option")}
													</option>
													{answerAndPoints[
														index + (sectionIndex === 0 ? 0 : toOffset(sectionIndex)) - toOffset(sectionIndex)
													].points.map((point) => (
														<option class="select__option" value={point.points}>
															{point.text[lang]}
														</option>
													))}
												</select>
												<div class="customSelect__icon">
													<svg
														width="24"
														height="24"
														fill="none"
														aria-hidden="true"
														viewBox="0 0 24 24"
														xmlns="http://www.w3.org/2000/svg"
													>
														<g opacity="0.3">
															<path
																d="M7 10L12 15L17 10"
																stroke="black"
																stroke-width="1.5"
																stroke-linecap="round"
																stroke-linejoin="round"
															/>
														</g>
													</svg>
												</div>
											</div>
										</label>
									</div>
								</fieldset>
							))}
							<fieldset class="quiz__fieldset">
								<legend class="quiz__legend quiz__legend--big">
									<p>{t("quiz.save")}</p>
								</legend>
								<input
									required
									type="email"
									id="userEmail"
									name="userEmail"
									class="quiz__input"
									autocomplete="email"
									placeholder={t("quiz.inputPlaceholder")}
								/>
								<div class="quiz__buttons">
									<button id="skipButton" class="button quiz__back quiz__back--active" type="button">
										{t("quiz.skip")}
									</button>
									<button id="submitButton" class="button quiz__submit" type="submit">
										{t("quiz.submit")}
									</button>
								</div>
							</fieldset>
						</div>
					))
				}

				<p id="quizError" class="quiz__error"></p>

				<div id="quizFooter" class="quiz__footer">
					<button id="backButton" class="quiz__back" type="button">
						<svg width="12" height="8" viewBox="0 0 12 8" fill="none" xmlns="http://www.w3.org/2000/svg">
							<path
								d="M3.80916 7L1 4L3.80916 1L4.28131 1.50425L2.27816 3.64347L11 3.64347L11 4.35657L2.27822 4.35657L4.28131 6.49575L3.80916 7Z"
								fill="#A09F9F"
								stroke="#A09F9F"
								stroke-width="0.3"></path>
						</svg>
						{t("quiz.back")}
					</button>
					<button id="nextButton" class="quiz__next" type="button">
						{t("quiz.next")}
						<svg
							width="12"
							height="8"
							fill="none"
							viewBox="0 0 12 8"
							aria-hidden="true"
							xmlns="http://www.w3.org/2000/svg"
						>
							<path
								d="M8.19084 7L11 4L8.19084 1L7.71869 1.50425L9.72184 3.64347L1 3.64347L1 4.35657L9.72178 4.35657L7.71869 6.49575L8.19084 7Z"
								fill="white"
								stroke="white"
								stroke-width="0.3"></path>
						</svg>
					</button>
				</div>
			</div>
		</form>
	</section>
</MainLayout>

<script src="../../assets/scripts/quiz/quizQuestions2.ts"></script>
