---
type Props = {
	name: string;
	className?: string;
};

const { name, className = "" } = Astro.props;
---

<div class={`timer ${className}`}>
	<p class="timer__name">{name}</p>
	<div class="timer__wrapper">
		<p class="timer__item">
			<span id="timerDayTime" class="timer__item--time">00</span>
			<span id="timerDayText" class="timer__item--text">дней</span>
		</p>
		<div class="timer__dec">:</div>
		<p class="timer__item">
			<span id="timerHoursTime" class="timer__item--time">00</span>
			<span id="timerHoursText" class="timer__item--text">часов</span>
		</p>
		<div class="timer__dec">:</div>
		<p class="timer__item">
			<span id="timerMinutesTime" class="timer__item--time">00</span>
			<span id="timerMinutesText" class="timer__item--text">минут</span>
		</p>
		<div class="timer__dec">:</div>
		<p class="timer__item">
			<span id="timerSecondsTime" class="timer__item--time">00</span>
			<span id="timerSecondsText" class="timer__item--text">секунд</span>
		</p>
	</div>
</div>

<script>
	import { getNoun } from "@/utils/getNoun";

	const dates = ["2024-05-04T18:00:00", "2024-05-11T18:00:00", "2024-05-18T18:00:00", "2024-05-25T18:00:00"];

	let time: string = dates[0];

	for (let i = 0; i < dates.length; i++) {
		if (new Date(dates[i]).getTime() > new Date().getTime()) {
			time = dates[i];
			break;
		}
	}

	const timerDayTime = document.querySelector("#timerDayTime") as HTMLSpanElement;
	const timerDayText = document.querySelector("#timerDayText") as HTMLSpanElement;
	const timerHoursTime = document.querySelector("#timerHoursTime") as HTMLSpanElement;
	const timerHoursText = document.querySelector("#timerHoursText") as HTMLSpanElement;
	const timerMinutesTime = document.querySelector("#timerMinutesTime") as HTMLSpanElement;
	const timerMinutesText = document.querySelector("#timerMinutesText") as HTMLSpanElement;
	const timerSecondsTime = document.querySelector("#timerSecondsTime") as HTMLSpanElement;
	const timerSecondsText = document.querySelector("#timerSecondsText") as HTMLSpanElement;

	let timerId: number;

	const updateTimer = () => {
		if (time) {
			const currentDate = new Date();
			const finalDate = new Date(time);
			const diff = +finalDate - +currentDate;

			if (diff <= 0) {
				clearInterval(timerId);
				return;
			}

			const daysLeft = Math.floor(diff / 1000 / 60 / 60 / 24);
			const hoursLeft = Math.floor(diff / 1000 / 60 / 60) % 24;
			const minutesLeft = Math.floor(diff / 1000 / 60) % 60;
			const secondsLeft = Math.floor(diff / 1000) % 60;

			timerDayTime.textContent = daysLeft < 10 ? `0${daysLeft}` : `${daysLeft}`;
			timerDayText.textContent = `${getNoun(daysLeft, "день", "дня", "дней")}`;

			timerHoursTime.textContent = hoursLeft < 10 ? `0${hoursLeft}` : `${hoursLeft}`;
			timerHoursText.textContent = `${getNoun(hoursLeft, "час", "часа", "часов")}`;

			timerMinutesTime.textContent = minutesLeft < 10 ? `0${minutesLeft}` : `${minutesLeft}`;
			timerMinutesText.textContent = `${getNoun(minutesLeft, "минута", "минуты", "минут")}`;

			timerSecondsTime.textContent = secondsLeft < 10 ? `0${secondsLeft}` : `${secondsLeft}`;
			timerSecondsText.textContent = `${getNoun(secondsLeft, "секунда", "секунды", "секунд")}`;
		}
	};

	updateTimer();

	timerId = setInterval(updateTimer, 1000);
</script>
